Licensing
Acknowledgements
Preamble
Table of Contents
Table of Examples
Table of Figures
Table of Equations
List of Acronyms

Learning Material Setup
	Autodesk Fusion360
	(Optional) Fritzing
	(Optional) DrawIO
	Arduino IDE
	(Optional) VS Code
	(Optional) Git and GitHub
	Arduino Kit Introduction
		Microcontroller
		MAX7219 LED Module
		Real Time Clock Module
		Matrix Keyboard
		PIR Motion Sensor
		IR receiver
		LCD screen
		Joystick module
		Ultrasonic distance sensor
		Sound receiver module
		ULN2003 motor driver board
		DHT-11 Sensor module
		Water level sensor
		7-Segment display


1. Digital Electronics
	1.1 Introduction to Binary
		1.1.1 What is Binary?
			Example 1.1 Arduino Blink
		1.1.2 Binary Arithmetic
		1.1.3 Binary Conversions
			Octal
			Hexadecimal
	1.2 Introduction to Logic Gates
		1.2.1 Truth Tables
			Aside: Karnaugh Maps (K-Maps)
		1.2.2 Basic Logical Operations
			Example: Basic Gates 1
			Example: Basic Gates 2
		1.2.3 Combination Logical Operations
		1.2.4 Advanced Logical Operations
			Example: Advanced Gates
		1.2.5 Exercise: Arduino and Logic Gates
	1.4 Multiplexing
		Demultiplexing
	1.5 Registers
		1.5.1 Register Basics
		1.5.2 Shift register
			Example 1.4 Arduino Shift Register
	1.6 Analog-to-Digital Conversion
		1.6.1 ADC Resolution
			Example 1.5 Analog Voltage Measurement
		1.6.2 Digital-to-Analog Conversion
	1.7 State Machines
		Example 1.6 Arduino RGB LED State Machine
	1.8 TTL Digital Communications
		1.8.1 Universal Asynchronous Receive and Transmit (UART)
		1.8.2 RS232
		1.8.3 Inter-Integrated Circuit (I2C)
		1.8.4 Serial Peripheral Interface (SPI)
	1.9 Differential Digital Communications
		1.9.1 RS485/Ethernet
		1.9.2 Universal Serial Bus (USB)
		1.9.3 Controller Area Network Bus (CANbus)
	1.10 Wireless Communications
		1.10.1 Basic Principle
			Wide Area Network (WAN)
			Star topology
			Mesh topology
		1.10.2 Long Range (LoRa) Radios
			LoRaWAN
		1.10.3 Sigfox
		1.10.4 Wireless Fidelity (WiFi)
		1.10.5 BlueTooth
			BlueTooth Low Energy
		1.10.6 Zigbee
		1.10.6 Cellular
		1.10.7 Satellite Communications (SATCOM)

2. Electrical Hardware
	2.1 Components
		2.1.1 Resistors
			Thermistors
			Photoresistors
			Potentiometers
		2.1.2 Capacitors
			Electrolytic
			Ceramic
		2.1.3 Inductors
		2.1.4 Transistors
			BJT
			MOSFET
		2.1.5 Diodes
			Normal
			Zener
			LEDs
		2.1.6 Oscillators
			Crystals
			Piezoelectric (buzzers)
		2.1.7 Switches
			Pulls and Throws
			Buttons (momentary switches)
			Relays
		2.1.8 Integrated Circuits (ICs)
		2.1.9 Actuators
			DC brushed motors
			DC brushless motors
			AC motors
			Servo motors
			Stepper motors
		2.1.10 Encoders
	2.2 Measurement Equipment
		2.2.1 Voltmeter, Ammeter, and Multimeters
		2.2.2 Oscilloscopes
		2.2.3 Logic Analyzers
	2.3 Construction of Simple Circuits
	2.4 Debugging Simple Circuits
	2.5 Power Considerations

3. Electrical Schematics and Printed Circuit Boards (PCBs)
	3.1 Schematic Basics
		3.1.1 Frame and Layout
		3.1.2 Layers
		3.1.3 Placing Components
			Consideration: Component package and board footprint
		3.1.4 Connecting Signals
			Aside: Bundling Signals Using Busses
		3.1.5 Submodules
		3.1.6 Electronics Rule Check (ERC)
	3.2 PCB Basics
		3.2.1 Board Shape
			Aside: Using sketches to derive board shape
		3.2.2 Laying Out Components
			Consideration: Grouping components of relied functionality
			Aside: Keepout zones, restricted zones
		3.2.3 Routing Traces
			Aside: Two-Layer versus Four-Layer
			Aside: Trace lengths, matching, thicknesses
		3.2.4 Vias
		3.2.5 Silkscreen
		3.2.6 Generating Copper Planes
		3.2.7 Design Rules Check (DRC)
	3.3 Download Component Library
		3.3.1 Component Selection
			Aside: Component searching and filtering in catalog websites like DigiKey
		3.3.2 Locating a Library Source
		3.3.3 Installation in Fusion360
	3.4 Creating A Custom Library
		Guided example with the Xsense MTi-300 AHRS
		3.4.1 Component Selection and Datasheet
		3.4.2 Creating a Library
		3.4.3 Creating a Symbol
		3.4.4 Creating a Footprint
		3.4.5 Creating a 3D Package
			Aside: Find user-generated 3D models on sites like GrabCAD

4. Software Basics and Architecture
	4.1 Arduino Basics
	4.2 Primitive Programming Datatypes
		4.2.1 Arrays
	4.3 Logic Flow
		4.3.1 If/Else Statement
		4.3.2 Switch/Case Statement
	4.4 Loops
		4.4.1 For Loops
		4.4.2 While Loops
	4.3 Classes and Objects
		4.3.1 Classes
		4.3.2 Structs
		Example 3.1 Using Arduino Objects
	4.4 Functions
	4.5 Interrupt Service Routines
	4.6 Guided Example: EVE Launchsonde Instrumentation Package
		4.6.1 Generating Requirements
		4.6.2 Visualizing Logic Flow
		4.6.3 Breaking it Down into Code Blocks
		4.6.5 Writing Each Code Block
		4.6.6 Wrapping it All Together
	4.7 Guided Example: Thetis Instrumentation Package
		4.6.1 Generating Requirements
		4.6.2 Visualizing Logic Flow
		4.6.3 Breaking it Down into Code Blocks
		4.6.5 Writing Each Code Block
		4.6.6 Wrapping it All Together

6. Data Acquisition and Processing
	6.0 Background
		6.0.1 Statistics
			Standard deviation
			Variance
			Distribution
			Probability Density Functions
		6.0.1 Time-series Domain
			Continuous sampling
			Burst sampling
			Nyquist frequency
		6.0.2 Frequency Domain
			Fast Fourier Transform
			Spectrum plots
			Guided example: Convert water level time series into Wave Spectra
		6.0.3 Bode Plots
			Gain and phase
	6.1 Digital Filtering
		6.1.1 Kalman Filter
		6.1.2 Mahony Filter
		6.1.3 Butterworth Filter
	6.2 Guided Example: Converting Inertial Measurement Unit Readings to Orientation
		6.2.1 Traditional Method
		6.2.2 With a Kalman Filter
		6.2.2 With a Mahony Filter
	6.3 Guided Example: Removing Gravity from Accelerometer Signals
		6.3.0 Background: Quaternions and Euler angles
		Rotating the gravity vector from the world frame to body frame
		Filtering with a Kalman filter
		6.3.1 Embedded (Real-Time) Method
		6.3.2 Post-Processing
	6.4 Guided Example: Smoothing Accelerometer Signals

Appendix
	Syllabus
	
	Demonstration: YSI Castaway
	Demonstration: HOBO Waterlogger
	Demonstration: Project EVE Launchsonde
	Demonstration: Lowell and Thetis Instrumentation
	Demonstration: Sidescan SONAR
	Demonstration: Magnetometer
	Demonstration: Soldering workshop

	Exam: Arduino Programming Midterm

	Homework 1: Arduino RGB LED Cycler
	Homework 2: Digital Inputs and Interrupts
	Homework 3: 4-Digit 7-Segment Display Counter
	Homework 4: Stepper Motor Control with Encoder
	Homework 5: Ultrasonic Sensor Module and LCD
	Homework 6: DHT Temperature Module and LCD
	
	Project: Undergraduate Project Overview and Requirements
	Project: Graduate Project Overview and Requirements
	
	Supplement: Using a Raspberry Pi to Program Arduino Over ICSP

Bibliography